// Voc√™ quer dizer **"wrap"** ou **"warp"**? üöÄ

// Vou assumir que voc√™ quer **wrap**, que √© mais comum em JavaScript. Geralmente, "wrap" significa **envolver algo em outra estrutura**, seja uma string, elemento HTML ou fun√ß√£o.

// Aqui est√£o alguns exemplos de "wrap" em JavaScript:

// ---

// ## 1Ô∏è‚É£ Wrap de string

// Colocar uma string dentro de outra ou adicionar prefixo/sufixo:

// ```js
// function wrapString(str, prefix, suffix) {
//   return prefix + str + suffix;
// }

// console.log(wrapString("mundo", "Ol√°, ", "!")); // Ol√°, mundo!
// ```

// ---

// ## 2Ô∏è‚É£ Wrap de elemento HTML

// Envolver um elemento `<p>` dentro de uma `<div>`:

// ```html
// <div id="container"></div>

// <script>
// const p = document.createElement("p");
// p.textContent = "Conte√∫do do par√°grafo";

// const wrapper = document.createElement("div");
// wrapper.classList.add("wrapper");

// // Adiciona o par√°grafo dentro do wrapper
// wrapper.appendChild(p);

// // Insere o wrapper no container
// document.getElementById("container").appendChild(wrapper);
// </script>
// ```

// ---

// ## 3Ô∏è‚É£ Wrap de fun√ß√£o (High-order function)

// Criar uma fun√ß√£o que **envolve outra fun√ß√£o** para adicionar comportamento extra:

// ```js
// function wrapFunction(fn) {
//   return function(...args) {
//     console.log("Antes da fun√ß√£o");
//     const result = fn(...args);
//     console.log("Depois da fun√ß√£o");
//     return result;
//   };
// }

// function sayHello(name) {
//   console.log(`Ol√°, ${name}`);
// }

// const wrappedHello = wrapFunction(sayHello);
// wrappedHello("Maria");
// // Sa√≠da:
// // Antes da fun√ß√£o
// // Ol√°, Maria
// // Depois da fun√ß√£o
// ```

// ---

// üí° Resumo:

// * **String wrap** ‚Üí concatenar prefixo/sufixo.
// * **Elemento wrap** ‚Üí criar um container e `appendChild`.
// * **Fun√ß√£o wrap** ‚Üí High-order function para adicionar comportamento extra.

// ---

// Se voc√™ quiser, posso criar um **wrap universal** em JS que funciona tanto para **strings quanto para elementos HTML**, de forma gen√©rica.

// Quer que eu fa√ßa isso?
