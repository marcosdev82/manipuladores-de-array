// Boa! üöÄ Aqui v√£o **mais 5 exerc√≠cios diferentes**, trabalhando **if, truthy/falsy, if encadeado e preced√™ncia de operadores**:

// ---

// ### **Exerc√≠cio 6 ‚Äì Login simples**

// Crie uma fun√ß√£o `login(username, password)` que:

// * Se `username` ou `password` forem **falsy**, imprima `"Preencha todos os campos"`.
// * Se `username === "admin"` **e** `password === "1234"`, imprima `"Login bem-sucedido"`.
// * Caso contr√°rio, imprima `"Usu√°rio ou senha incorretos"`.

// ---

// ### **Exerc√≠cio 7 ‚Äì Par ou √çmpar**

// Crie uma fun√ß√£o `checkNumber(num)` que:

// * Se `num` for falsy (`0`, `null`, `NaN`, `undefined`), imprima `"N√∫mero inv√°lido"`.
// * Se `num % 2 === 0`, imprima `"N√∫mero par"`.
// * Caso contr√°rio, imprima `"N√∫mero √≠mpar"`.

// ---

// ### **Exerc√≠cio 8 ‚Äì Desconto em produto**

// Crie uma fun√ß√£o `calculateDiscount(price, coupon)` que:

// * Se `price` for falsy, imprima `"Pre√ßo inv√°lido"`.
// * Se `coupon` for truthy **e** `price > 100`, aplique 20% de desconto.
// * Se `coupon` for truthy **e** `price <= 100`, aplique 10% de desconto.
// * Se `coupon` for falsy, n√£o aplique desconto.
// * Imprima o valor final.

// ---

// ### **Exerc√≠cio 9 ‚Äì Jogo de pontos**

// Crie uma fun√ß√£o `gamePoints(points)` que:

// * Se `points` for falsy, imprima `"Sem pontos"`.
// * Se `points >= 1000`, imprima `"N√≠vel Lend√°rio"`.
// * Se `points >= 500`, imprima `"N√≠vel Avan√ßado"`.
// * Se `points >= 100`, imprima `"N√≠vel Intermedi√°rio"`.
// * Caso contr√°rio, imprima `"N√≠vel Iniciante"`.

// ---

// ### **Exerc√≠cio 10 ‚Äì Checagem de dia da semana**

// Crie uma fun√ß√£o `dayCheck(day)` que:

// * Se `day` for falsy, imprima `"Dia inv√°lido"`.
// * Se `day === "s√°bado"` ou `day === "domingo"`, imprima `"Fim de semana"`.
// * Caso contr√°rio, imprima `"Dia √∫til"`.
